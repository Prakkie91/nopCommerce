@model XcellenceIT.Plugin.NopAcceleratePlus.Search.Models.ProductStatusModel
@{
    //page title
    ViewBag.Title = T("XcellenceIT.Plugin.NopAcceleratePlus.Search.Title.ProductStatus").Text;
    Layout = "_AdminLayout";
    Html.SetActiveMenuItemSystemName("XcellenceIT.Plugin.NopAcceleratePlus.Search.ProductStatus");
}
@inject Nop.Core.IWebHelper webHelper

<nop-antiforgery-token />
<form asp-controller="NopAcceleratePlusSearch" asp-action="ProductStatus" method="post">
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Plugins.NopAcceleratePlus.Search.Fields.NopAccelerateSearch") - @T("Plugins.NopAcceleratePlus.Search.Fields.ProductStatus")
        </h1>
        <div class="pull-right">
            <button type="button" id="delete-selected" class="btn bg-red">
                <i class="fa fa-trash-o"></i>
                @T("Plugins.NopAcceleratePlus.Search.Button.DeletedSelected")
            </button>
            <button type="button" id="markAsPending-selected" class="btn bg-red">
                <i class="fa fa-trash-o"></i>
                @T("Plugins.NopAcceleratePlus.Search.Button.MarkAsPending")
            </button>
            <button type="button" id="imageStatus-selected" class="btn bg-red">
                <i class="fa fa-trash-o"></i>
                @T("Plugins.NopAcceleratePlus.Search.Button.ImageStatus")
            </button>
            <nop-action-confirmation asp-button-id="delete-selected" />
            <nop-action-confirmation asp-button-id="markAsPending-selected" />
            <nop-action-confirmation asp-button-id="imageStatus-selected" />
        </div>
    </div>

    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default panel-search">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-5">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="SearchProductName" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-editor asp-for="SearchProductName" />
                                    </div>
                                </div>
                                <div class="form-group" @(Model.AvailableCategories.SelectionIsNotPossible() ? Html.Raw("style=\"display:none\"") : null)>
                                    <div class="col-md-4">
                                        <nop-label asp-for="SearchCategoryId" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-select asp-for="SearchCategoryId" asp-items="Model.AvailableCategories" />
                                    </div>
                                </div>
                                <div class="form-group" @(Model.AvailableCategories.SelectionIsNotPossible() ? Html.Raw("style=\"display:none\"") : null)>
                                    <div class="col-md-4">
                                        <nop-label asp-for="SearchIncludeSubCategories" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-editor asp-for="SearchIncludeSubCategories" />
                                    </div>
                                </div>
                                <div class="form-group" @(Model.AvailableManufacturers.SelectionIsNotPossible() ? Html.Raw("style=\"display:none\"") : null)>
                                    <div class="col-md-4">
                                        <nop-label asp-for="SearchManufacturerId" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-select asp-for="SearchManufacturerId" asp-items="Model.AvailableManufacturers" />
                                    </div>
                                </div>
                                <div class="form-group" @(Model.AvailableVendors.SelectionIsNotPossible() ? Html.Raw("style='display: none;'") : null)>
                                    <div class="col-md-4">
                                        <nop-label asp-for="SearchVendorId" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-select asp-for="SearchVendorId" asp-items="Model.AvailableVendors" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-7">
                                <div class="form-group" @(Model.AvailableWarehouses.SelectionIsNotPossible() ? Html.Raw("style=\"display:none\"") : null)>
                                    <div class="col-md-4">
                                        <nop-label asp-for="SearchWarehouseId" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-select asp-for="SearchWarehouseId" asp-items="Model.AvailableWarehouses" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="SearchProductTypeId" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-select asp-for="SearchProductTypeId" asp-items="Model.AvailableProductTypes" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="SearchPublishedId" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-select asp-for="SearchPublishedId" asp-items="Model.AvailablePublishedOptions" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="SearchDeletedId" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-select asp-for="SearchDeletedId" asp-items="Model.AvailableDeletedOptions" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="SearchSolrStatusId" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-select asp-for="SearchSolrStatusId" asp-items="Model.AvailableSolStatusOptions" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="SearchImageStatusId" />
                                    </div>
                                    <div class="col-md-8">
                                        <nop-select asp-for="SearchImageStatusId" asp-items="Model.AvailableImageStatusOptions" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <nop-label asp-for="SearchProductIds" />
                                    </div>
                                    <div class="col-md-8">
                                        <div class="input-group input-group-short">
                                            <nop-editor asp-for="SearchProductIds" />
                                            <span class="input-group-btn">
                                                <button type="button" id="go-to-product-by-sku" name="go-to-product-by-sku" class="btn btn-info btn-flat">
                                                    @T("Admin.Common.Go")
                                                </button>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-7 col-md-offset-5">
                                <button type="button" id="search-products" class="btn btn-primary btn-search">
                                    <i class="fa fa-search"></i>
                                    @T("Admin.Common.Search")
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-body">
                        @await Html.PartialAsync("Table", new DataTablesModel
                        {
                            Name = "productStatus-grid",
                            UrlRead = new DataUrl("ProductStatusList", "NopAcceleratePlusSearch", null),
                            Length = Model.PageSize,
                            SearchButtonId = "search-products",
                            LengthMenu = Model.AvailablePageSizes,
                            Filters = new List<FilterParameter>
                            {
                                new FilterParameter(nameof(Model.SearchProductName)),
                                new FilterParameter(nameof(Model.SearchCategoryId)),
                                new FilterParameter(nameof(Model.SearchIncludeSubCategories)),
                                new FilterParameter(nameof(Model.SearchManufacturerId)),
                                new FilterParameter(nameof(Model.SearchVendorId)),
                                new FilterParameter(nameof(Model.SearchWarehouseId)),
                                new FilterParameter(nameof(Model.SearchProductTypeId)),
                                new FilterParameter(nameof(Model.SearchPublishedId)),
                                new FilterParameter(nameof(Model.SearchDeletedId)),
                                new FilterParameter(nameof(Model.SearchSolrStatusId)),
                                new FilterParameter(nameof(Model.SearchImageStatusId)),
                                new FilterParameter(nameof(Model.SearchProductIds)),
                            },
                            ColumnCollection = new List<ColumnProperty>
                             {
                                new ColumnProperty(nameof(ProductStatusGridModel.Id))
                                 {
                                     IsMasterCheckBox = true,
                                     Render = new RenderCheckBox("checkbox_products"),
                                     ClassName =  NopColumnClassDefaults.CenterAll,
                                     Width = "50",
                                 },
                                 new ColumnProperty(nameof(ProductStatusGridModel.ProductId))
                                 {
                                     Title = T("Plugins.NopAcceleratePlus.Search.Fields.ProductId").Text,
                                     Width = "30"
                                 },
                                 new ColumnProperty(nameof(ProductStatusGridModel.ProductName))
                                 {
                                     Title = T("Plugins.NopAcceleratePlus.Search.Fields.ProductName").Text,
                                     Width = "200"
                                 },
                                 new ColumnProperty(nameof(ProductStatusGridModel.SolrStatus))
                                 {
                                     Title = T("Plugins.NopAcceleratePlus.Search.Fields.SolrStatus").Text,
                                     Width = "50",
                                     ClassName =  NopColumnClassDefaults.CenterAll,
                                     Render = new RenderBoolean()
                                 },
                                 new ColumnProperty(nameof(ProductStatusGridModel.Published))
                                 {
                                     Title = T("Plugins.NopAcceleratePlus.Search.Fields.Published").Text,
                                     Width = "50",
                                     ClassName =  NopColumnClassDefaults.CenterAll,
                                     Render = new RenderBoolean()
                                 },
                                 new ColumnProperty(nameof(ProductStatusGridModel.ImageStatus))
                                 {
                                     Title = T("Plugins.NopAcceleratePlus.Search.Fields.ImageStatus").Text,
                                     Width = "50",
                                     ClassName =  NopColumnClassDefaults.CenterAll,
                                     Render = new RenderBoolean()
                                 },
                                 new ColumnProperty(nameof(ProductStatusGridModel.ProductId))
                                 {
                                     Title = T("Admin.Common.Edit").Text,
                                     Width = "100",
                                     ClassName =  NopColumnClassDefaults.Button,
                                     Render = new RenderButtonEdit(new DataUrl("../Product/Edit")),
                                 },
                                 new ColumnProperty(nameof(ProductStatusGridModel.ProductId))
                                 {
                                     Title = T("Plugins.NopAcceleratePlus.Search.Grid.Button.MarkAsPending").Text,
                                     Width = "200",
                                     ClassName =  NopColumnClassDefaults.CenterAll,
                                     Render = new RenderButtonCustom(NopButtonClassDefaults.Olive, T("Plugins.NopAcceleratePlus.Search.Grid.Button.MarkAsPending").Text)
                                    {
                                        OnClickFunctionName = "MarkAsPendingProduct"
                                    }
                                 },
                             }
                        })
                    </div>
                </div>
            </div>
        </div>
        @await Component.InvokeAsync("NopAcceleratePlusSearchVersion")
    </div>

    <script type="text/javascript">
        var selectedIds = [];
        function MarkAsPendingProduct(id) {
            var postData = {
                id: id
            };
            addAntiForgeryToken(postData);
            $.ajax({
              cache: false,
              type: "POST",
              url: "@(Url.Action("MarkAsPendingProduct", "NopAcceleratePlusSearch"))",
              data: postData,
              complete: function () {
                    $('#productStatus-grid').DataTable().ajax.reload();

                }
              });
        }
        $(document).ready(function () {
            //search button
            $(document).keypress(function (event) {
                var keycode = (event.keyCode ? event.keyCode : event.which);
                if (keycode == '13') {
                    return false;
                }
            });

            $('#go-to-product-by-sku').click(function () {
                $("#search-products").click();
            });


            $("#@Html.IdFor(model => model.SearchProductName)").keydown(function (event) {
                if (event.keyCode === 13) {
                    $("#search-products").click();
                    return false;
                }
            });

            //delete selected
            $('#delete-selected-action-confirmation-submit-button').click(function(e) {
                e.preventDefault();
                var postData = {
                    selectedIds: selectedIds
                };
                addAntiForgeryToken(postData);
                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("SetDeleteStatusForSelectedIds", "NopAcceleratePlusSearch"))",
                    data: postData,
                    complete: function (data) {
                        $('#productStatus-grid').DataTable().ajax.reload();
                    },
                    error: function(xhr, ajaxOptions, thrownError) {
                        alert(thrownError);
                    },
                    traditional: true
                });
                $('#delete-selected-action-confirmation').modal('toggle');
                return false;
            });

            $('#markAsPending-selected-action-confirmation-submit-button').click(function(e) {
                e.preventDefault();
                var postData = {
                    selectedIds: selectedIds
                };
                addAntiForgeryToken(postData);
                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("SetSolrStatusForSelectedIds", "NopAcceleratePlusSearch"))",
                    data: postData,
                    complete: function (data) {
                        $('#productStatus-grid').DataTable().ajax.reload();
                    },
                    error: function(xhr, ajaxOptions, thrownError) {
                        alert(thrownError);
                    },
                    traditional: true
                });
                $('#markAsPending-selected-action-confirmation').modal('toggle');
                return false;
            });

            $('#imageStatus-selected-action-confirmation-submit-button').click(function(e) {
                e.preventDefault();
                var postData = {
                    selectedIds: selectedIds
                };
                addAntiForgeryToken(postData);
                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "@(Url.Action("SetImageStatusForSelectedIds", "NopAcceleratePlusSearch"))",
                    data: postData,
                    complete: function (data) {
                        $('#productStatus-grid').DataTable().ajax.reload();
                    },
                    error: function(xhr, ajaxOptions, thrownError) {
                        alert(thrownError);
                    },
                    traditional: true
                });
                $('#imageStatus-selected-action-confirmation').modal('toggle');
                return false;
            });

            $('#mastercheckbox').click(function () {
                $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
            });
        });
    </script>
</form>
}
